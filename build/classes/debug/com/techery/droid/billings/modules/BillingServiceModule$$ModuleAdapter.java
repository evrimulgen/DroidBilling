// Code generated by dagger-compiler.  Do not edit.
package com.techery.droid.billings.modules;


import dagger.internal.Binding;
import dagger.internal.ModuleAdapter;
import java.util.Map;
import javax.inject.Provider;

/**
 * A manager of modules and provides adapters allowing for proper linking and
 * instance provision of types served by {@code @Provides} methods.
 */
public final class BillingServiceModule$$ModuleAdapter extends ModuleAdapter<BillingServiceModule> {
  private static final String[] INJECTS = { "members/com.techery.droid.billings.BillingProcessController", "members/com.techery.droid.billings.tasks.ConsumeTask", "members/com.techery.droid.billings.tasks.QueryInventoryTask", };
  private static final Class<?>[] STATIC_INJECTIONS = { };
  private static final Class<?>[] INCLUDES = { };

  public BillingServiceModule$$ModuleAdapter() {
    super(INJECTS, STATIC_INJECTIONS, false /*overrides*/, INCLUDES, false /*complete*/, true /*library*/);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getBindings(Map<String, Binding<?>> map) {
    map.put("com.techery.droid.billings.models.BillingFeatureSupportingResult", new ProvideBillingFeatureSupportingResultProvidesAdapter(module));
    map.put("com.android.vending.billing.IInAppBillingService", new ProvideIInAppBillingServiceProvidesAdapter(module));
  }

  /**
   * A {@code Binder<com.techery.droid.billings.models.BillingFeatureSupportingResult>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   * 
   * Being a {@code Provider<com.techery.droid.billings.models.BillingFeatureSupportingResult>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideBillingFeatureSupportingResultProvidesAdapter extends Binding<com.techery.droid.billings.models.BillingFeatureSupportingResult>
      implements Provider<com.techery.droid.billings.models.BillingFeatureSupportingResult> {
    private final BillingServiceModule module;

    public ProvideBillingFeatureSupportingResultProvidesAdapter(BillingServiceModule module) {
      super("com.techery.droid.billings.models.BillingFeatureSupportingResult", null, NOT_SINGLETON, "com.techery.droid.billings.modules.BillingServiceModule.provideBillingFeatureSupportingResult()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.techery.droid.billings.models.BillingFeatureSupportingResult>}.
     */
    @Override
    public com.techery.droid.billings.models.BillingFeatureSupportingResult get() {
      return module.provideBillingFeatureSupportingResult();
    }
  }

  /**
   * A {@code Binder<com.android.vending.billing.IInAppBillingService>} implementation which satisfies
   * Dagger's infrastructure requirements including:
   * 
   * Being a {@code Provider<com.android.vending.billing.IInAppBillingService>} and handling creation and
   * preparation of object instances.
   */
  public static final class ProvideIInAppBillingServiceProvidesAdapter extends Binding<com.android.vending.billing.IInAppBillingService>
      implements Provider<com.android.vending.billing.IInAppBillingService> {
    private final BillingServiceModule module;

    public ProvideIInAppBillingServiceProvidesAdapter(BillingServiceModule module) {
      super("com.android.vending.billing.IInAppBillingService", null, NOT_SINGLETON, "com.techery.droid.billings.modules.BillingServiceModule.provideIInAppBillingService()");
      this.module = module;
      setLibrary(true);
    }

    /**
     * Returns the fully provisioned instance satisfying the contract for
     * {@code Provider<com.android.vending.billing.IInAppBillingService>}.
     */
    @Override
    public com.android.vending.billing.IInAppBillingService get() {
      return module.provideIInAppBillingService();
    }
  }
}
